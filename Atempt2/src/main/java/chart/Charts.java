/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package chart;


import java.awt.Color;

public class Charts extends javax.swing.JFrame {

    public Charts() {
        initComponents();
        this.setBackground(Color.black);
        chart.addLegend("Income ( Dh )", new Color(249,187,0));
        
int january = Income.getIjanuary() ;
int february = Income.getIfebruary();
int march = Income.getImarch() ;
int april = Income.getIapril() ;
int may = Income.getImay();
int june = Income.getIjune() ;
int july = Income.getIjuly() ;
int august = Income.getIaugust() ;
int september = Income.getIseptember() ;
int october = Income.getIoctober() ;
int november = Income.getInovember() ;
int december = Income.getIdecember() ;

int available = CarAvailability.getNumAvailable();
int occupied = CarAvailability.getNumUnavailable();


        chart.addData(new ModelChart("January", new double[]{january}));
        chart.addData(new ModelChart("February", new double[]{february}));
        chart.addData(new ModelChart("March", new double[]{march}));
        chart.addData(new ModelChart("April", new double[]{april}));
        chart.addData(new ModelChart("May", new double[]{may}));
        chart.addData(new ModelChart("June", new double[]{june}));        
        chart.addData(new ModelChart("July", new double[]{july}));
        chart.addData(new ModelChart("August", new double[]{august}));
        chart.addData(new ModelChart("September", new double[]{september}));
        chart.addData(new ModelChart("October", new double[]{october}));
        chart.addData(new ModelChart("November", new double[]{november}));
        chart.addData(new ModelChart("December", new double[]{december}));
        pieChart.setChartType(PieChart.PeiChartType.DONUT_CHART);
        pieChart.addData(new ModelPieChart("Available", available, new Color(23, 126, 238)));
        pieChart.addData(new ModelPieChart("Occupied", occupied, new Color(221, 65, 65)));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chart = new chart.Chart();
        pieChart = new chart.PieChart();
        BackFromLogin = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 102));
        setMinimumSize(new java.awt.Dimension(1616, 825));
        setUndecorated(true);

        chart.setOpaque(false);

        BackFromLogin.setBackground(new java.awt.Color(226, 226, 226));
        BackFromLogin.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 12)); // NOI18N
        BackFromLogin.setForeground(new java.awt.Color(102, 102, 102));
        BackFromLogin.setText(" ‚Üê Back");
        BackFromLogin.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(30, 46, 48), 0, true));
        BackFromLogin.setContentAreaFilled(false);
        BackFromLogin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BackFromLogin.setFocusPainted(false);
        BackFromLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BackFromLoginMouseClicked(evt);
            }
        });
        BackFromLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackFromLoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BackFromLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(chart, javax.swing.GroupLayout.PREFERRED_SIZE, 780, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pieChart, javax.swing.GroupLayout.DEFAULT_SIZE, 760, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(pieChart, javax.swing.GroupLayout.PREFERRED_SIZE, 636, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(67, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(BackFromLogin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chart, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BackFromLoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackFromLoginMouseClicked
        this.setVisible(false);
    }//GEN-LAST:event_BackFromLoginMouseClicked

    private void BackFromLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackFromLoginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BackFromLoginActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Charts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Charts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Charts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Charts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Charts().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackFromLogin;
    private chart.Chart chart;
    private chart.PieChart pieChart;
    // End of variables declaration//GEN-END:variables
}
