package com.saad.ClientComponents;

import com.saad.Classes.Account;
import static com.saad.Classes.Account.findAccount;
import com.saad.Classes.Car;
import com.saad.Classes.Comment;
import com.saad.Classes.Notification;
import static com.saad.Classes.Notification.checkNotificationSeenStatus;
import static com.saad.Classes.Notification.getNotifications;
import com.saad.ClientComponents.*;
import java.awt.BorderLayout;
import java.awt.Color;
import java.sql.SQLException;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractButton;
import javax.swing.JPanel;

/**
 *
 * @author saadk
 */
public class ClientFrame extends javax.swing.JFrame {

    /**
     * Creates new form VisitorFrame
     */
    public ClientFrame(Account account) throws SQLException {
        initComponents();
        setBackground(new Color(0, 0, 0, 0));
         loginHeadPanel1.initMoving(ClientFrame.this);
        clientAccountFrame1.FirstName.setText(account.FirstName);
        clientAccountFrame1.LastName.setText(account.LastName);
        clientAccountFrame1.Email.setText(account.Email);
        clientAccountFrame1.Password.setText(account.Password);
        ClientMenu.Id_Account.setText(Integer.toString(account.Id));
        NotifStatus(account.Id);
        
                 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollBar1 = new javax.swing.JScrollBar();
        loginHeadPanel1 = new com.saad.GlobalComponents.LoginHeadPanel();
        ClientCardPanel = new javax.swing.JPanel();
        clientCarFrameSP1 = new com.saad.ClientComponents.ClientCarFrameSP();
        clientAccountFrame1 = new com.saad.ClientComponents.ClientAccountFrame();
        notifFrameSP1 = new com.saad.ClientComponents.NotifFrameSP();
        clientResFrameSP1 = new com.saad.ClientComponents.ClientResFrameSP();
        commentSP1 = new com.saad.ClientComponents.CommentSP();
        Menu = new com.saad.ClientComponents.ClientMenu();
        footer21 = new com.saad.GlobalComponents.Footer2();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1487, 815));
        setMinimumSize(new java.awt.Dimension(1487, 815));
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        loginHeadPanel1.setBackground(new java.awt.Color(137, 148, 137));
        loginHeadPanel1.setBorder(null);

        ClientCardPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 5, new java.awt.Color(51, 51, 51)));
        ClientCardPanel.setLayout(new java.awt.CardLayout());
        ClientCardPanel.add(clientCarFrameSP1, "card4");

        clientAccountFrame1.setOpaque(true);
        ClientCardPanel.add(clientAccountFrame1, "card3");
        ClientCardPanel.add(notifFrameSP1, "card5");
        ClientCardPanel.add(clientResFrameSP1, "card6");
        ClientCardPanel.add(commentSP1, "card6");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(loginHeadPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Menu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(ClientCardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1223, Short.MAX_VALUE))
            .addComponent(footer21, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(loginHeadPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ClientCardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 758, Short.MAX_VALUE)
                    .addComponent(Menu, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addComponent(footer21, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public static void NotifStatus(int id) throws SQLException{
        
        
if (checkNotificationSeenStatus(id).equals("no")) {
    ClientMenuItem.n.setVisible(true);
}
        else {
            ClientMenuItem.n.setVisible(false);
        }

    }
    
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        try {
            Account account = findAccount(Integer.parseInt(ClientMenu.Id_Account.getText()));
            
            LinkedList<Car> carList1 = null;
            carList1 = Car.listCars();
            
            LinkedList<Notification> NotifList = null;
            NotifList = Notification.getNotifications();
            
            LinkedList<Comment> cmtlist = null;
            cmtlist = Comment.getComments();
            
            LinkedList<Car> carList2 = null;
            
            carList2 = Car.listResCars(account);
            
            if (carList1 != null) {
                for (Car car : carList1) {
                    ClientCarCard carCard = new ClientCarCard(car);
                    ClientCarFrame.CarCardGrid.add(carCard);
                }
            }
            if (carList2 != null) {
                for (Car car : carList2) {
                    ClientResCard carCardRes = new ClientResCard(car);
                    ClientResFrame.CarCardGrid.add(carCardRes );
                }
            }
            
            if (NotifList != null) {
                  for (Notification notification : NotifList) {
                      NotifCard notifCard = new NotifCard(notification);
                      NotifFrame.CarCardGrid.add(notifCard);
                  }
          }
            
            if (cmtlist != null) {
                  for (Comment cmt : cmtlist) {
                      CommentCard commentCard = new CommentCard(cmt);
                      CommentFrame.CarCardGrid.add(commentCard);
                  }
          }
            
            


        } catch (SQLException ex) {      
            Logger.getLogger(ClientFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_formWindowOpened
        public JPanel getnotifFrameSP1() {
        return notifFrameSP1;
        }

        public JPanel getclientResFrameSP1() {
        return clientResFrameSP1;
        }
    
        public JPanel getClientCardPanel() {
        return ClientCardPanel;
        }
        
         public JPanel getclientAccountFrame1() {
        return clientAccountFrame1;
        }       
         
         public JPanel getclientCarFrameSP1() {
        return clientCarFrameSP1;
         }
         
         public JPanel getcommentSP1() {
        return commentSP1;
         }
         
         
       
      /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ClientFrame(null).setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(ClientFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JPanel ClientCardPanel;
    public static com.saad.ClientComponents.ClientMenu Menu;
    private com.saad.ClientComponents.ClientAccountFrame clientAccountFrame1;
    private com.saad.ClientComponents.ClientCarFrameSP clientCarFrameSP1;
    private com.saad.ClientComponents.ClientResFrameSP clientResFrameSP1;
    private com.saad.ClientComponents.CommentSP commentSP1;
    private com.saad.GlobalComponents.Footer2 footer21;
    private javax.swing.JScrollBar jScrollBar1;
    private com.saad.GlobalComponents.LoginHeadPanel loginHeadPanel1;
    private com.saad.ClientComponents.NotifFrameSP notifFrameSP1;
    // End of variables declaration//GEN-END:variables
}
