package com.saad.ClientComponents;

import static com.saad.AdminComponents.AdminCarCard.getImageDataFromDatabase;
import com.saad.Classes.Account;
import static com.saad.Classes.Account.findAccount;
import com.saad.Classes.Car;
import com.saad.Classes.Client;
import static com.saad.Classes.Client.AddClient;
import static com.saad.Classes.Client.accountExists;
import static com.saad.Classes.Client.getCINByAccountId;
import com.saad.Classes.Comment;
import com.saad.Classes.Reservation;
import static com.saad.Classes.Reservation.addReservation;
import com.saad.ClientComponents.*;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.lang.System.Logger;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.temporal.ChronoUnit;
import java.util.Date;
import java.util.Enumeration;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import javax.swing.AbstractButton;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;

/**
 *
 * @author saadk
 */
public class ReservationFrame extends javax.swing.JFrame {

    /**
     * Creates new form VisitorFrame
     */
    public ReservationFrame(Car c, Account a) {
        initComponents();
        setBackground(new Color(0, 0, 0, 0));
        CarName.setText(c.getModel());
        CarColor.setText(c.getColor());
        CarPrice.setText(Double.toString(c.getPrice()));
        carid.setText(Integer.toString(c.getRegistrationNumber()));
        accid.setText(Integer.toString(a.Id)); 
          byte[] imageData = getImageDataFromDatabase(c.getRegistrationNumber());
  ImageIcon imageIcon = new ImageIcon(imageData);

carpic.setSize(635, 350);
        // Resize the image to match the width and height of the 'carpic' label
        Image image = imageIcon.getImage();
    Image scaledImage = image.getScaledInstance(carpic.getWidth(), carpic.getHeight(), Image.SCALE_SMOOTH);
    ImageIcon scaledIcon = new ImageIcon(scaledImage);

        // Set the scaled image icon as the icon for the 'carpic' JLabel
        carpic.setIcon(scaledIcon);
        
        // Set the preferred size of the 'carpic' label to match the size of the scaled image
        carpic.setPreferredSize(new Dimension(scaledImage.getWidth(null), scaledImage.getHeight(null)));
    }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollBar1 = new javax.swing.JScrollBar();
        ClientCardPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        CarName = new javax.swing.JLabel();
        CarColor = new javax.swing.JLabel();
        CarPrice = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ReserveB = new javax.swing.JButton();
        accid = new javax.swing.JLabel();
        BackFromLogin = new javax.swing.JButton();
        carid = new javax.swing.JLabel();
        errorCIN = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        PriceG = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        day1 = new javax.swing.JComboBox<>();
        day2 = new javax.swing.JComboBox<>();
        month1 = new javax.swing.JComboBox<>();
        month2 = new javax.swing.JComboBox<>();
        carpic = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        CarPrice1 = new javax.swing.JLabel();
        CINUM = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(50, this.getLocation().y)
        );
        setMinimumSize(new java.awt.Dimension(1485, 808));
        setUndecorated(true);
        setResizable(false);

        ClientCardPanel.setBackground(new java.awt.Color(255, 255, 255));
        ClientCardPanel.setForeground(new java.awt.Color(51, 51, 51));
        ClientCardPanel.setMaximumSize(new java.awt.Dimension(600, 500));
        ClientCardPanel.setMinimumSize(new java.awt.Dimension(600, 500));
        ClientCardPanel.setPreferredSize(new java.awt.Dimension(600, 500));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Arial", 1, 22)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Car Color :");
        jLabel1.setOpaque(true);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Arial", 1, 22)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Car Name :");
        jLabel2.setOpaque(true);

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Arial", 1, 22)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("Car Price :");
        jLabel5.setOpaque(true);

        CarName.setBackground(new java.awt.Color(255, 255, 255));
        CarName.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        CarName.setForeground(new java.awt.Color(51, 51, 51));
        CarName.setText(" ");
        CarName.setOpaque(true);

        CarColor.setBackground(new java.awt.Color(255, 255, 255));
        CarColor.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        CarColor.setForeground(new java.awt.Color(51, 51, 51));
        CarColor.setText(" ");
        CarColor.setOpaque(true);

        CarPrice.setBackground(new java.awt.Color(255, 255, 255));
        CarPrice.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        CarPrice.setForeground(new java.awt.Color(51, 51, 51));
        CarPrice.setText(" ");
        CarPrice.setOpaque(true);

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("Enter CIN :");
        jLabel3.setOpaque(true);

        ReserveB.setBackground(new java.awt.Color(255, 204, 51));
        ReserveB.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        ReserveB.setForeground(new java.awt.Color(51, 51, 51));
        ReserveB.setText("Reserve Car");
        ReserveB.setBorder(null);
        ReserveB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ReserveB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ReserveBMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ReserveBMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ReserveBMouseExited(evt);
            }
        });

        accid.setBackground(new java.awt.Color(255, 255, 255));
        accid.setForeground(new java.awt.Color(255, 255, 255));
        accid.setText(" ");
        accid.setOpaque(true);

        BackFromLogin.setBackground(new java.awt.Color(255, 255, 255));
        BackFromLogin.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 12)); // NOI18N
        BackFromLogin.setForeground(new java.awt.Color(51, 51, 51));
        BackFromLogin.setText(" ‚Üê Back");
        BackFromLogin.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(30, 46, 48), 0, true));
        BackFromLogin.setContentAreaFilled(false);
        BackFromLogin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BackFromLogin.setFocusPainted(false);
        BackFromLogin.setOpaque(true);
        BackFromLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BackFromLoginMouseClicked(evt);
            }
        });
        BackFromLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackFromLoginActionPerformed(evt);
            }
        });

        carid.setBackground(new java.awt.Color(255, 255, 255));
        carid.setForeground(new java.awt.Color(255, 255, 255));
        carid.setText(" ");
        carid.setOpaque(true);

        errorCIN.setBackground(new java.awt.Color(255, 255, 255));
        errorCIN.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        errorCIN.setForeground(new java.awt.Color(153, 0, 0));
        errorCIN.setText("CIN doesn't match this account");
        errorCIN.setOpaque(true);
        errorCIN.setVisible(false);

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Arial", 1, 21)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText("Start Date : ");
        jLabel4.setOpaque(true);

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Arial", 1, 21)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 51));
        jLabel6.setText("End Date : ");
        jLabel6.setOpaque(true);

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Arial", 1, 29)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        jLabel7.setText("Renting Price :");
        jLabel7.setOpaque(true);

        PriceG.setBackground(new java.awt.Color(255, 255, 255));
        PriceG.setFont(new java.awt.Font("Nirmala UI Semilight", 1, 24)); // NOI18N
        PriceG.setForeground(new java.awt.Color(51, 51, 51));
        PriceG.setText(" 0.00");
        PriceG.setOpaque(true);

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 51));
        jLabel8.setText("Dh/Day");
        jLabel8.setOpaque(true);

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 51));
        jLabel9.setText("Day :");
        jLabel9.setOpaque(true);

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 51));
        jLabel10.setText("Month : ");
        jLabel10.setOpaque(true);

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 51, 51));
        jLabel11.setText("Month : ");
        jLabel11.setOpaque(true);

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 51, 51));
        jLabel12.setText("Day :");
        jLabel12.setOpaque(true);

        day1.setBackground(new java.awt.Color(226, 226, 226));
        day1.setForeground(new java.awt.Color(51, 51, 51));
        day1.setMaximumRowCount(20);
        day1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        day1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                day1ItemStateChanged(evt);
            }
        });

        day2.setBackground(new java.awt.Color(226, 226, 226));
        day2.setForeground(new java.awt.Color(51, 51, 51));
        day2.setMaximumRowCount(20);
        day2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        day2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                day2ItemStateChanged(evt);
            }
        });

        month1.setBackground(new java.awt.Color(226, 226, 226));
        month1.setForeground(new java.awt.Color(51, 51, 51));
        month1.setMaximumRowCount(12);
        month1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        month1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                month1ItemStateChanged(evt);
            }
        });

        month2.setBackground(new java.awt.Color(226, 226, 226));
        month2.setForeground(new java.awt.Color(51, 51, 51));
        month2.setMaximumRowCount(12);
        month2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        month2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                month2ItemStateChanged(evt);
            }
        });

        carpic.setBackground(new java.awt.Color(255, 255, 255));
        carpic.setForeground(new java.awt.Color(51, 51, 51));
        carpic.setMaximumSize(new java.awt.Dimension(635, 350));
        carpic.setMinimumSize(new java.awt.Dimension(635, 350));
        carpic.setOpaque(true);
        carpic.setPreferredSize(new java.awt.Dimension(635, 350));

        jLabel13.setBackground(new java.awt.Color(102, 102, 102));
        jLabel13.setText(" ");
        jLabel13.setOpaque(true);

        CarPrice1.setBackground(new java.awt.Color(255, 255, 255));
        CarPrice1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        CarPrice1.setForeground(new java.awt.Color(51, 51, 51));
        CarPrice1.setText("Dh / Day");
        CarPrice1.setOpaque(true);

        CINUM.setBackground(new java.awt.Color(255, 255, 255));
        CINUM.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        CINUM.setForeground(new java.awt.Color(51, 51, 51));
        CINUM.setAlignmentY(0.0F);
        CINUM.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 51, 51)));

        javax.swing.GroupLayout ClientCardPanelLayout = new javax.swing.GroupLayout(ClientCardPanel);
        ClientCardPanel.setLayout(ClientCardPanelLayout);
        ClientCardPanelLayout.setHorizontalGroup(
            ClientCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ClientCardPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(ClientCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ClientCardPanelLayout.createSequentialGroup()
                        .addComponent(accid, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BackFromLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ClientCardPanelLayout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(PriceG, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8))
                    .addComponent(carid, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ClientCardPanelLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(carpic, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(58, 58, 58)
                .addComponent(jLabel13)
                .addGroup(ClientCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ClientCardPanelLayout.createSequentialGroup()
                        .addGroup(ClientCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ClientCardPanelLayout.createSequentialGroup()
                                .addGap(316, 316, 316)
                                .addComponent(jLabel4))
                            .addGroup(ClientCardPanelLayout.createSequentialGroup()
                                .addGap(228, 228, 228)
                                .addGroup(ClientCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(ClientCardPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(day1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(26, 26, 26)
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(month1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(ClientCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(ClientCardPanelLayout.createSequentialGroup()
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(CINUM, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(ClientCardPanelLayout.createSequentialGroup()
                                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(ClientCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(errorCIN)
                                                .addGroup(ClientCardPanelLayout.createSequentialGroup()
                                                    .addComponent(day2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(26, 26, 26)
                                                    .addComponent(jLabel11)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(month2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ClientCardPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 210, Short.MAX_VALUE)
                        .addGroup(ClientCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ClientCardPanelLayout.createSequentialGroup()
                                .addComponent(ReserveB, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(261, 261, 261))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ClientCardPanelLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(310, 310, 310))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ClientCardPanelLayout.createSequentialGroup()
                                .addGroup(ClientCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(26, 26, 26)
                                .addGroup(ClientCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(ClientCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(CarColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(CarName, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(ClientCardPanelLayout.createSequentialGroup()
                                        .addComponent(CarPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, 0)
                                        .addComponent(CarPrice1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(193, 193, 193))))))
        );
        ClientCardPanelLayout.setVerticalGroup(
            ClientCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ClientCardPanelLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(44, 44, 44))
            .addGroup(ClientCardPanelLayout.createSequentialGroup()
                .addGroup(ClientCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ClientCardPanelLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(accid))
                    .addGroup(ClientCardPanelLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(BackFromLogin)))
                .addGroup(ClientCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ClientCardPanelLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(ClientCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CarName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ClientCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CarColor, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ClientCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CarPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CarPrice1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(63, 63, 63)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ClientCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(day1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(month1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ClientCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(day2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(month2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(88, 88, 88))
                    .addGroup(ClientCardPanelLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(carid)
                        .addGap(37, 37, 37)
                        .addComponent(carpic, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(ClientCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ClientCardPanelLayout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addGroup(ClientCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PriceG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8))
                        .addGap(171, 171, 171))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ClientCardPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(errorCIN)
                        .addGap(18, 18, 18)
                        .addGroup(ClientCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(CINUM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(98, 98, 98)
                        .addComponent(ReserveB, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(ClientCardPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 1485, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ClientCardPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 808, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ReserveBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReserveBMouseClicked

String cin = CINUM.getText();
int accID = Integer.parseInt(accid.getText());
int cid = Integer.parseInt(carid.getText());
double payment = Double.parseDouble(PriceG.getText());

boolean accountExists = accountExists(accID);
String cinByAccountId = getCINByAccountId(accID);

if (accountExists) {
    if (!cin.equals(cinByAccountId)) {
        CINUM.getSelectedText();
        errorCIN.setVisible(true);
    } else {
        String startDay = (String) day1.getSelectedItem();
        String endDay = (String) day2.getSelectedItem();
        String startMonth = (String) month1.getSelectedItem();
        String endMonth = (String) month2.getSelectedItem();
        int year = 2023; // Year is always set to 2023

        // Map month names to their respective numeric values
        Map<String, Integer> monthMap = new HashMap<>();
        monthMap.put("January", 1);
        monthMap.put("February", 2);
        monthMap.put("March", 3);
        monthMap.put("April", 4);
        monthMap.put("May", 5);
        monthMap.put("June", 6);
        monthMap.put("July", 7);
        monthMap.put("August", 8);
        monthMap.put("September", 9);
        monthMap.put("October", 10);
        monthMap.put("November", 11);
        monthMap.put("December", 12);

        // Get the numeric values for start and end months
        int startMonthValue = monthMap.get(startMonth);
        int endMonthValue = monthMap.get(endMonth);

        // Create Date objects using the selected values
        Date startDate = new GregorianCalendar(year, startMonthValue - 1, Integer.parseInt(startDay)).getTime();
        Date endDate = new GregorianCalendar(year, endMonthValue - 1, Integer.parseInt(endDay)).getTime();

        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String endDateString = dateFormat.format(endDate);
        String startDateString = dateFormat.format(startDate);

        errorCIN.setVisible(false);
        CINUM.setText("");
        addReservation(startDateString, endDateString, accID, cid,payment);

        this.setVisible(false);

        ReservationOK rok = new ReservationOK();
        rok.setVisible(true);
    }
} else {
    String startDay = (String) day1.getSelectedItem();
    String endDay = (String) day2.getSelectedItem();
    String startMonth = (String) month1.getSelectedItem();
    String endMonth = (String) month2.getSelectedItem();
    int year = 2023; // Year is always set to 2023

    // Map month names to their respective numeric values
    Map<String, Integer> monthMap = new HashMap<>();
    monthMap.put("January", 1);
    monthMap.put("February", 2);
    monthMap.put("March", 3);
    monthMap.put("April", 4);
    monthMap.put("May", 5);
    monthMap.put("June", 6);
    monthMap.put("July", 7);
    monthMap.put("August", 8);
    monthMap.put("September", 9);
    monthMap.put("October", 10);
    monthMap.put("November", 11);
    monthMap.put("December", 12);

    // Get the numeric values for start and end months
    int startMonthValue = monthMap.get(startMonth);
    int endMonthValue = monthMap.get(endMonth);

    // Create Date objects using the selected values
    Date startDate = new GregorianCalendar(year, startMonthValue - 1, Integer.parseInt(startDay)).getTime();
    Date endDate = new GregorianCalendar(year, endMonthValue - 1, Integer.parseInt(endDay)).getTime();

    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    String endDateString = dateFormat.format(endDate);
    String startDateString = dateFormat.format(startDate);

    AddClient(cin, accID);
    addReservation(startDateString, endDateString, accID, cid,payment);
    errorCIN.setVisible(false);
    CINUM.setText("");

    this.setVisible(false);

    ReservationOK rok = new ReservationOK();
    rok.setVisible(true);


       
    }//GEN-LAST:event_ReserveBMouseClicked
        }
    private void BackFromLoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackFromLoginMouseClicked
        this.setVisible(false);
    }//GEN-LAST:event_BackFromLoginMouseClicked

    private void ReserveBMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReserveBMouseExited
        ReserveB.setBackground(new Color(255, 204, 51));
    }//GEN-LAST:event_ReserveBMouseExited

    private void ReserveBMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReserveBMouseEntered
        ReserveB.setBackground(new Color(193,145,0));

    }//GEN-LAST:event_ReserveBMouseEntered

    private void day1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_day1ItemStateChanged
                updatePriceGLabel();
    }//GEN-LAST:event_day1ItemStateChanged

    private void month1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_month1ItemStateChanged
        updatePriceGLabel();   
    }//GEN-LAST:event_month1ItemStateChanged

    private void day2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_day2ItemStateChanged
        updatePriceGLabel();
    }//GEN-LAST:event_day2ItemStateChanged

    private void month2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_month2ItemStateChanged
        updatePriceGLabel();
    }//GEN-LAST:event_month2ItemStateChanged

    private void BackFromLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackFromLoginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BackFromLoginActionPerformed
private void updatePriceGLabel() {
    // Retrieve the selected start and end dates from the JComboBoxes
    String startDay = (String) day1.getSelectedItem();
    String endDay = (String) day2.getSelectedItem();
    String startMonth = (String) month1.getSelectedItem();
    String endMonth = (String) month2.getSelectedItem();
    int year = 2023; // Year is always set to 2023

    // Map month names to their respective numeric values
    Map<String, Integer> monthMap = new HashMap<>();
    monthMap.put("January", 1);
    monthMap.put("February", 2);
    monthMap.put("March", 3);
    monthMap.put("April", 4);
    monthMap.put("May", 5);
    monthMap.put("June", 6);
    monthMap.put("July", 7);
    monthMap.put("August", 8);
    monthMap.put("September", 9);
    monthMap.put("October", 10);
    monthMap.put("November", 11);
    monthMap.put("December", 12);

    // Get the numeric values for start and end months
    int startMonthValue = monthMap.get(startMonth);
    int endMonthValue = monthMap.get(endMonth);

    // Create Date objects using the selected values
    Date startDate = new GregorianCalendar(year, startMonthValue - 1, Integer.parseInt(startDay)).getTime();
    Date endDate = new GregorianCalendar(year, endMonthValue - 1, Integer.parseInt(endDay)).getTime();

    // Check if the end date is before the start date
    if (endDate.before(startDate)) {
        // Handle the error condition (e.g., show an error message)
        // In this example, I'm simply setting the PriceG label text to an error message
        PriceG.setText("Invalid");
        return; // Exit the method to prevent further calculations
    }

    // Check if the selected month is February for start and end dates
    if (startMonthValue == 2) {
        // Remove days 30 and 31 from the start day JComboBox
        removeDaysFromComboBox(day1, 30);
        removeDaysFromComboBox(day1, 31);

        // Check if the selected start day is greater than 29
        int selectedStartDay = Integer.parseInt((String) day1.getSelectedItem());
        if (selectedStartDay > 29) {
            day1.setSelectedItem("29");
        }
    } else {
        // Check if days 30 and 31 are already removed, and add them back if necessary
        addDaysToComboBox(day1, 30);
        addDaysToComboBox(day1, 31);
    }

    if (endMonthValue == 2) {
        // Remove days 30 and 31 from the end day JComboBox
        removeDaysFromComboBox(day2, 30);
        removeDaysFromComboBox(day2, 31);

        // Check if the selected end day is greater than 29
        int selectedEndDay = Integer.parseInt((String) day2.getSelectedItem());
        if (selectedEndDay > 29) {
            day2.setSelectedItem("29");
        }
    } else {
        // Check if days 30 and 31 are already removed, and add them back if necessary
        addDaysToComboBox(day2, 30);
        addDaysToComboBox(day2, 31);
    }

    // Calculate the number of days between the start and end dates
    long diff = ChronoUnit.DAYS.between(startDate.toInstant(), endDate.toInstant());

    double carPrice = Double.parseDouble(CarPrice.getText());

    // Calculate the total price
    double totalPrice = diff * carPrice;

    // Update the PriceG label with the calculated total price
    PriceG.setText(Double.toString(totalPrice));
}

private void removeDaysFromComboBox(JComboBox<String> comboBox, int day) {
    DefaultComboBoxModel<String> model = (DefaultComboBoxModel<String>) comboBox.getModel();
    model.removeElement(Integer.toString(day));
}

private void addDaysToComboBox(JComboBox<String> comboBox, int day) {
    DefaultComboBoxModel<String> model = (DefaultComboBoxModel<String>) comboBox.getModel();
    if (model.getIndexOf(Integer.toString(day)) == -1) {
        model.addElement(Integer.toString(day));
    }
}
      /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReservationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReservationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReservationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReservationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReservationFrame(null,null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackFromLogin;
    private javax.swing.JTextField CINUM;
    private javax.swing.JLabel CarColor;
    private javax.swing.JLabel CarName;
    private javax.swing.JLabel CarPrice;
    private javax.swing.JLabel CarPrice1;
    public javax.swing.JPanel ClientCardPanel;
    private javax.swing.JLabel PriceG;
    private javax.swing.JButton ReserveB;
    private javax.swing.JLabel accid;
    private javax.swing.JLabel carid;
    private javax.swing.JLabel carpic;
    private javax.swing.JComboBox<String> day1;
    private javax.swing.JComboBox<String> day2;
    private javax.swing.JLabel errorCIN;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JComboBox<String> month1;
    private javax.swing.JComboBox<String> month2;
    // End of variables declaration//GEN-END:variables
}
